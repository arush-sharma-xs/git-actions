name: GitHub Actions - Deploy Lambda function
run-name: ${{ github.actor }} is deploying the lambda function on AWS ðŸš€
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: install_dependency
        run: |
          sudo apt install zip
          mkdir -p ./deployment_zip
          # Install dependencies in the deployment package
          # pip install --target ./deployment_zip snowflake-connector-python --platform manylinux2010_x86_64 --only-binary=:all:

          # # Copy the Lambda function
          # cp ./lambda_function.py ./deployment_zip/
          # cd deployment_zip
          # zip -r lambda_zip.zip *

      - name: lambda_deploy
        run: |
          #Variabes
          BASE_DIR="./external-lambdas"

          if [ ! -d "$BASE_DIR" ]; then
              echo "Error: $BASE_DIR directory not found"
              exit 1
          fi

          find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d | while read -r folder; do
              echo "Checking folder: $folder"
              files=("$folder"/*.py)

              if [ -e "${files[0]}" ]; then
                  #lets deploy python lambda function
                  echo "deploy python lambda"
                  cd "$folder"


                  # Get the folder name without path
                  FOLDER_NAME=$(basename "$folder")
                  echo "Processing Lambda function for: $FOLDER_NAME"

                  # Check for changes in the folder
                  CHANGES=$(git diff --name-only HEAD HEAD~1 "$folder" || echo "")
                  
                  if [ -z "$CHANGES" ]; then
                    echo "No changes detected in $FOLDER_NAME. Skipping deployment."
                    continue
                  fi
                  
                  echo "Changes detected in $FOLDER_NAME:"
                  echo "$CHANGES"
                  
                  # Create deployment package
                  echo "Creating deployment package..."
                  mkdir -p ./deployment_zip
                  cp -r $folder/* ./deployment_zip/
                  cd deployment_zip
                  zip -r lambda_zip.zip .
                  cd ..

                  # Check if function exists
                  if ! aws lambda get-function --function-name "$FOLDER_NAME-lambda" 2>/dev/null; then
                    echo "Lambda function does not exist. Creating new function..."
                    
                    aws lambda create-function \
                      --function-name "$FOLDER_NAME-lambda" \
                      --runtime "python3.9" \
                      --role "${{ secrets.LAMBDA_ROLE_ARN }}" \
                      --handler "lambda_handler.lambda_handler" \
                      --zip-file "fileb://deployment_zip/lambda_zip.zip" \
                      --timeout 120 \
                      --memory-size 128

                    echo "Waiting for function to be active..."
                    while true; do
                      STATUS=$(aws lambda get-function --function-name "$FOLDER_NAME-lambda" --query 'Configuration.State' --output text 2>/dev/null)
                      if [ "$STATUS" = "Active" ]; then
                        echo "Lambda function is now active"
                        break
                      elif [ "$STATUS" = "Failed" ]; then
                        echo "Lambda function creation failed"
                        exit 1
                      fi
                      echo "Current status: $STATUS. Waiting..."
                      sleep 5
                    done
                  else
                    echo "Lambda function exists. Updating code..."
                    aws lambda update-function-code \
                      --function-name "$FOLDER_NAME-lambda" \
                      --zip-file "fileb://deployment_zip/lambda_zip.zip"
                  fi

                  # Clean up
                  rm -rf ./deployment_zip

            else
                echo "deploy node app "
                echo "No Python files found in $folder"
            fi
            #for now deploy only one code
            break
          done
